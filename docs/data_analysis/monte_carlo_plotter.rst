Monte Carlo Plotter
-------------------

.. note:: All seaborn and matplotlib saved figures also generates a tikz figure (.tex) for LaTeX reports.

**Small code example**

.. code-block:: python

    path = "path/to/the/run_data/file"
    monte = MonteCarloAnalyzer(path=path)       # MonteCarloAnalyzer uses MonteCarloPlotter by default as a variable :code:`monte_carlo_plotter`
    monte.monte_carlo_plotter.plot_line_confidence_interval(x_axis='epoch')

.. py:class:: MonteCarloPlotter(Plotter)

    Inherits from Plotter.
    Used by :ref:`monte-carlo-analyzer`.

    As :ref:`plotter`, this class is used to plot evolution graphs with respect to each epoch like loss or accuracy but uses the average and/or median result of a monte carlo simulation.
    It also enables the plot of the same figures but with confidence intervals as it can be seen in the figures at the end of the page.

.. py:method:: __init__(self, path)

    :param path: Path where with all the csv files that ends with :code:`_statistical_result.csv`. These csv are generated by :ref:`monte-carlo-analyzer`.


.. py:method:: plot_line_confidence_interval(self, key='accuracy', showfig=False, savefig=True, library='matplotlib', title='', full_border=True, x_axis='epoch', extension=".svg")

    Saves/shows the evolution of the trainig median and mean with the corresponding confidence intervals of the results.

    :param library: string stating the library to be used to generate the box plot. `matplotlib <https://matplotlib.org/stable/index.html>`_, `plotly <https://plotly.com/python/>`_ or `seaborn <https://seaborn.pydata.org/>`_
    :param key: String stating what to plot using :code:`tf.keras.History` labels. ex. :code:`val_accuracy`, :code:`val_loss`, :code:`accuracy` or :code:`loss`.
    :param showfig: If :code:`True`, it will show the grated box plot
    :param savefig: If :code:`True`, it saves the figure at: :code:`self.path / "plots/box_plot/"`
    :param title: Figure title
    :param full_border:
    :param x_axis: What to use for the :code:`x_axis`, by default, :code:`epoch` (Not recommended to change)
    :param extension: file extensions (default svg) to be used when saving the file (ignored if library is plotly).

**Output example using pyplot**

.. raw:: html
   :file: ../_static/data_analysis_examples/montecarlo_test_accuracy.html

**Output example using seaborn**

.. raw:: html

    <object data="../_static/data_analysis_examples/montecarlo_test_accuracy_matplotlib.svg" type="image/svg+xml"></object>

.. py:method:: plot_key(self, key='accuracy', reload=False, library='plotly', showfig=False, savefig=True, index_loc='mean', extension=".svg")

