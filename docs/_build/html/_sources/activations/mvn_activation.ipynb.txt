{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"name":"mvn_activation.ipynb","provenance":[],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"d1Bz7pn_gkxX"},"source":["# Phasor activation functions\n","\n","## MVN activation function\n","\n","This code explains the logic of mvn activation function for an easy understanding.\n","\n","For further information refer to the original papers of Naum Aizenberg:\n","\n"," - [Multivalued threshold functions](https://link.springer.com/article/10.1007%2FBF01068667)\n"," - [A GENERALIZATION OF THE THRESHOLD FUNCTIONS](https://www.jstor.org/stable/43667575?casa_token=QrhCiytSlCUAAAAA%3ARRwNRt0TRmfddbOwMP_Si5cqYg6FzCa44WtvX2Ac2yPK_xkA6n2ycfuyLzvWvKFdh-L9JfShlDV6elRcjgtiuDgfKEKFOfA6fqxCIUX5r9SG4Ou7hETN&seq=1#metadata_info_tab_contents)\n"," \n","According to these works: \n","*A multi-valued neuron (MVN) is a neural element with n inputs and one output lying on the unit circle, and with complex-valued weights.*"]},{"cell_type":"code","metadata":{"id":"PbIwvl5ogkxr"},"source":["# We first import everything\n","import matplotlib.pyplot as plt\n","from cvnn.activations import mvn_activation, georgiou_cdbp\n","import tensorflow as tf\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CPkaUMg1gkxu"},"source":["For a start we will create complex valued points to use as an example."]},{"cell_type":"code","metadata":{"id":"wZ3zJ16Xgkxw"},"source":["x = tf.constant([-2, 1.0, 0.0, 1.0, -3], dtype=tf.float32)\n","y = tf.constant([-2.5, -1.5, 0.0, 1.0, 2], dtype=tf.float32)\n","z = tf.complex(x, y)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kcivaaxSgkxx"},"source":["MVN function divides the phase into `k` sections and cast the input phase to the closest of those k values while also fizing the amplitude to 1.\n","\n","The equation would be\n","\n","$$\n","f(z) = \\exp^{\\frac{i 2 \\pi a}{ k } }\n","$$\n","\n","with $a$ so that $$\\frac{i 2 \\pi a}{ k }  \\leq arg(z) \\le \\frac{i 2 \\pi (a+1)}{ k } $$"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"DVHlmto8gkxz","executionInfo":{"status":"ok","timestamp":1620218029004,"user_tz":-120,"elapsed":860,"user":{"displayName":"Agustin Barrachina","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggm3JoL8ld9WezGDvPZ4-UKAWep0EtmV924ywBkpdY=s64","userId":"01069692456318510292"}},"outputId":"b6936fe9-2ab4-431b-e5ed-f1ba7a670bc9"},"source":["k = 3\n","result = mvn_activation(z, k=k)\n","# cnums = np.arange(5) + 1j * np.arange(6, 11)]\n","ax = plt.axes()\n","ax.scatter(tf.math.real(z), tf.math.imag(z), color='red')\n","ax.scatter(tf.math.real(result), tf.math.imag(result), color='blue')\n","\n","# Plot arrows of the mapping road\n","for x, y, dx, dy in zip(tf.math.real(z), tf.math.imag(z),\n","                        tf.math.real(result) - tf.math.real(z),\n","                        tf.math.imag(result) - tf.math.imag(z)):\n","    ax.arrow(x, y, dx, dy, length_includes_head=True, head_width=0.1)\n","# PLot unit circle\n","t = np.linspace(0, np.pi * 2, 100)\n","ax.plot(np.cos(t), np.sin(t), linewidth=1)\n","\n","yabs_max = abs(max(ax.get_ylim(), key=abs))\n","xabs_max = abs(max(ax.get_xlim(), key=abs))\n","axis_max = max(yabs_max, xabs_max)\n","\n","# Divide map on the different zones\n","ax.pie(np.ones(k) / k, radius=4, wedgeprops={'alpha': 0.3})\n","\n","ax.set_ylim(ymin=-axis_max, ymax=axis_max)\n","ax.set_xlim(xmin=-axis_max, xmax=axis_max)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"8uXr1Rwpgkx2"},"source":["### Continous values\n","\n","If `k` is not given, it will use $k \\to \\infty$ making it an equivalence of just mapping the input to the unitary circle (keeps the phase but changes the amplitude to 1).\n","This is mathematically $$ f(z) = \\exp^{i arg(z)} .$$\n","\n","For $z \\neq 0$ this is also $$ f(z) = \\frac{z}{|z|} .$$"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"cwqxrS_Dgkx3","executionInfo":{"status":"ok","timestamp":1620217911358,"user_tz":-120,"elapsed":793,"user":{"displayName":"Agustin Barrachina","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggm3JoL8ld9WezGDvPZ4-UKAWep0EtmV924ywBkpdY=s64","userId":"01069692456318510292"}},"outputId":"17c78bc4-de46-4da0-c7f0-1493896d3a72"},"source":["result = mvn_activation(z)\n","\n","ax = plt.axes()\n","ax.scatter(tf.math.real(z), tf.math.imag(z), color='red')\n","ax.scatter(tf.math.real(result), tf.math.imag(result), color='blue')\n","for x, y, dx, dy in zip(tf.math.real(z), tf.math.imag(z),\n","                        tf.math.real(result) - tf.math.real(z),\n","                        tf.math.imag(result) - tf.math.imag(z)):\n","    ax.arrow(x, y, dx, dy, length_includes_head=True, head_width=0.1)\n","t = np.linspace(0,np.pi*2,100)\n","ax.plot(np.cos(t), np.sin(t), linewidth=1)\n","\n","yabs_max = abs(max(ax.get_ylim(), key=abs))\n","xabs_max = abs(max(ax.get_xlim(), key=abs))\n","axis_max = max(yabs_max, xabs_max)\n","\n","ax.set_ylim(ymin=-axis_max, ymax=axis_max)\n","ax.set_xlim(xmin=-axis_max, xmax=axis_max)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-3.2, 3.2)"]},"metadata":{"tags":[]},"execution_count":5},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"uKcOj7D7gkx5"},"source":["## Georgiou CDBP\n","\n","Activation function proposed by [G. M. Georgioy and C. Koutsougeras](https://ieeexplore.ieee.org/abstract/document/142037)\n","\n","There are a few differences with MVN:\n","\n","- You can choose the circle radius with the `r` parameter.\n","- Zero stays at zero."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"iKC0VoPkgkx6","executionInfo":{"status":"ok","timestamp":1620218024234,"user_tz":-120,"elapsed":529,"user":{"displayName":"Agustin Barrachina","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggm3JoL8ld9WezGDvPZ4-UKAWep0EtmV924ywBkpdY=s64","userId":"01069692456318510292"}},"outputId":"000103eb-0df2-49f2-b3da-8d20a3122d60"},"source":["x = tf.constant([-2, 1.0, 0.0, 1.0, -3, 0.8, 0.1], dtype=tf.float32)\n","y = tf.constant([-2.5, -1.5, 0.0, 1.0, 2, 0.4, -0.4], dtype=tf.float32)\n","z = tf.complex(x, y)\n","result = georgiou_cdbp(z)\n","\n","ax = plt.axes()\n","ax.scatter(tf.math.real(z), tf.math.imag(z), color='red')\n","ax.scatter(tf.math.real(result), tf.math.imag(result), color='blue')\n","for x, y, dx, dy in zip(tf.math.real(z), tf.math.imag(z),\n","                        tf.math.real(result) - tf.math.real(z),\n","                        tf.math.imag(result) - tf.math.imag(z)):\n","    ax.arrow(x, y, dx, dy, length_includes_head=True, head_width=0.1)\n","t = np.linspace(0, np.pi * 2, 100)\n","ax.plot(np.cos(t), np.sin(t), linewidth=1)\n","\n","yabs_max = abs(max(ax.get_ylim(), key=abs))\n","xabs_max = abs(max(ax.get_xlim(), key=abs))\n","axis_max = max(yabs_max, xabs_max)\n","\n","ax.set_ylim(ymin=-axis_max, ymax=axis_max)\n","ax.set_xlim(xmin=-axis_max, xmax=axis_max)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}